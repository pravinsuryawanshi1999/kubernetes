pipeline {
    agent any

    environment {
        CUSTOM_MS_LIST = 'Scripts/custom-ms-list.txt'
    }

    parameters {
        choice(name: 'FORCE_RECREATE_PODS', choices: ['0', '1'], description: 'Force recreate pods')
        choice(name: 'MICROSERVICE_NAME', choices: ['my-python-app', 'my-java-app', 'my-node-app', 'ALL'], description: 'Name of the microservice to deploy. Use ALL to deploy all microservices listed in custom-ms-list.txt')
        string(name: 'deployment_name', defaultValue: '', description: 'Name of the deployment')
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout the code from your repository
                    checkout scm
                }
            }
        }

        stage('Deploy Microservice') {
            steps {
                script {
                    def msName = params.MICROSERVICE_NAME
                    def forceRecreate = params.FORCE_RECREATE_PODS
                    if (msName != 'ALL') {
                        echo "Deploying single microservice: ${msName}"
                        sh """
                        export FORCE_RECREATE_PODS=${forceRecreate}
                        ./Scripts/deploy-application.sh ${forceRecreate} ${msName}
                        """
                    } else {
                        echo "Deploying all microservices listed in ${env.CUSTOM_MS_LIST}"
                        sh """
                        export FORCE_RECREATE_PODS=${forceRecreate}
                        ./Scripts/deploy-application.sh ${forceRecreate} ALL
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully. Sending the notification"
            mail bcc: '', 
                body: "Scaling down replicas for deployment ${params.deployment_name} was successful.", 
                cc: '', 
                from: '', 
                replyTo: '', 
                subject: "Pipeline success: ${params.deployment_name}", 
                to: 'pravinsuryawanshi1999@gmail.com'            
        }
        failure {
            echo "Pipeline failed. Sending the notification"
            mail bcc: '', 
                body: "Scaling down replicas for deployment ${params.deployment_name} failed.", 
                cc: '', 
                from: '', 
                replyTo: '', 
                subject: "Pipeline failure: ${params.deployment_name}", 
                to: 'pravinsuryawanshi1999@gmail.com'                     
        }
    }
}

