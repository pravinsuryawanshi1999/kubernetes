pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'pravinsuryawanshi1999/home_credit_default_risk'
        VERSION = "1.0.0.${BUILD_ID}"
        NEXUS_REPOSITORY = 'localhost:8082'
        NEXUS_USERNAME = credentials('nexus-username')
        NEXUS_PASSWORD = credentials('nexus-password')
    }

    stages {
        stage('Clean Workspace') {
            steps {
                script {
                    // Ensure workspace is cleaned up before cloning
                    sh "rm -rf home_credit_default_risk || true"
                }
            }
        }

        stage('Clone Repositories') {
            steps {
                script {
                    // Clone the repository containing the Dockerfile and application code
                    sh "git clone https://github.com/pravinsuryawanshi1999/home_credit_default_risk.git"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "/usr/local/bin/docker login ${NEXUS_REPOSITORY} --username ${NEXUS_USERNAME} --password ${NEXUS_PASSWORD}"
                    sh "/usr/local/bin/docker build -f home_credit_default_risk/Dockerfile -t ${DOCKER_IMAGE}:${VERSION} home_credit_default_risk"
                }
            }
        }

        stage('Tag Docker Image') {
            steps {
                script {
                    sh "/usr/local/bin/docker docker tag ${DOCKER_IMAGE}:${VERSION} ${NEXUS_REPOSITORY}/${DOCKER_IMAGE}:${VERSION}"
                }
            }
        }

        stage('Push Docker Image to Nexus') {
            steps {
                script {
                    sh "/usr/local/bin/docker login ${NEXUS_REPOSITORY} --username ${NEXUS_USERNAME} --password ${NEXUS_PASSWORD}"
                    sh "/usr/local/bin/docker docker push ${NEXUS_REPOSITORY}/${DOCKER_IMAGE}:${VERSION}"
                }
            }
        }
    }

    post {
        success {
            echo "Docker image ${DOCKER_IMAGE}:${VERSION} successfully built, tagged, and pushed to Nexus."
        }
        failure {
            echo 'Pipeline failed. Please check the logs for details.'
        }
    }
}

