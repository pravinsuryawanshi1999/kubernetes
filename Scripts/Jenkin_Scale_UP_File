pipeline {
    agent any
    parameters {
        string(name: 'env_name', defaultValue: 'stagging', description: 'this pipeline will execute on stagging')
        string(name: 'namespace', defaultValue: 'default', description: 'select the namespace')
        choice(name: 'deployment_name:' , choices: ['nginx-deployment', 'my-app'], description: 'select the deployment')
    }
    stages {
        stage('Confirm') {
            steps {
                script {
                  echo "Deployment name: ${params.deployment_name}"
                  echo "env_name: ${params.env_name}"
                  echo "namespace: ${params.namespace}"
                  input message: "Do you want to proceed with the scale up deployment?"                    
                }
            }
        }
        stage('Scale up the deployment') {
            steps {
                timeout(time: 5, unit: 'MINUTES') { // Set a timeout of 5 minutes
                    script {
                        echo "Calling the scale up deployment script..."
                        try {
                            sh """
                            export PATH=/opt/homebrew/bin:\$PATH
                            chmod +x Scripts/scaleup.sh
                            sh Scripts/scaleup.sh ${params.deployment_name}
                            """
                            echo "Script execution successful..."
                        } catch (Exception e) {
                            error("Scale-up script failed: ${e.getMessage()}")                        
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            echo "Pipeline completed successfully. Sending the notification"
            mail bcc: '', 
                body: "Scaling down replicas for deployment ${params.deployment_name} was successful.", 
                cc: '', 
                from: '', 
                replyTo: '', 
                subject: "Pipeline success: ${params.deployment_name}", 
                to: 'pravisuryawanshi1999@gmail.com'            
        }
        failure {
            echo "Pipeline failed. Sending the notification"
            mail bcc: '', 
                body: "Scaling down replicas for deployment ${params.deployment_name} failed.", 
                cc: '', 
                from: '', 
                replyTo: '', 
                subject: "Pipeline failure: ${params.deployment_name}", 
                to: 'pravisuryawanshi1999@gmail.com'                     
        }
    }
}

